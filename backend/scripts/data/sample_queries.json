{
    "data": [
        {
            "query": "SELECT * FROM medicine_issues WHERE issue_date = '2024-01-01';",
            "description": "Retrieve all medicine issues on a specific date.",
            "type": "SAMPLE_QUERY"
        },
        {
            "query": "SELECT p.full_name, m.name, mi.quantity, mi.issue_date FROM medicine_issues mi JOIN patients p ON mi.patient_id = p.id JOIN medicines m ON mi.medicine_id = m.id WHERE mi.issue_date BETWEEN '2024-01-01' AND '2024-01-31';",
            "description": "List of medicines issued to patients in January 2024 with patient and medicine details.",
            "type": "SAMPLE_QUERY"
        },
        {
            "query": "SELECT m.category, SUM(mi.quantity) AS total_issued FROM medicine_issues mi JOIN medicines m ON mi.medicine_id = m.id GROUP BY m.category;",
            "description": "Total quantity of medicines issued grouped by medicine category.",
            "type": "SAMPLE_QUERY"
        },
        {
            "query": "SELECT s.name AS supplier_name, SUM(sc.quantity) AS total_quantity_supplied FROM stock_credit sc JOIN suppliers s ON sc.supplier_id = s.id GROUP BY s.name ORDER BY total_quantity_supplied DESC;",
            "description": "Total quantity supplied by each supplier ordered by highest supply.",
            "type": "SAMPLE_QUERY"
        },
        {
            "query": "SELECT m.name, sb.balance FROM stock_balance sb JOIN medicines m ON sb.medicine_id = m.id WHERE sb.balance < 10;",
            "description": "Medicines with stock balance less than 10 units.",
            "type": "SAMPLE_QUERY"
        },
        {
            "query": "SELECT u.full_name, u.role, COUNT(sc.id) AS credits_logged FROM users u LEFT JOIN stock_credit sc ON sc.created_by = u.id GROUP BY u.id ORDER BY credits_logged DESC;",
            "description": "Number of stock credit entries logged by each user.",
            "type": "SAMPLE_QUERY"
        },
        {
            "query": "SELECT p.gender, COUNT(DISTINCT mi.patient_id) AS patient_count FROM medicine_issues mi JOIN patients p ON mi.patient_id = p.id GROUP BY p.gender;",
            "description": "Count of unique patients issued medicines grouped by gender.",
            "type": "SAMPLE_QUERY"
        },
        {
            "query": "SELECT m.name, SUM(sc.quantity) AS total_credited, SUM(sd.quantity) AS total_debited, SUM(sc.quantity) - SUM(sd.quantity) AS current_balance FROM medicines m LEFT JOIN stock_credit sc ON m.id = sc.medicine_id LEFT JOIN stock_debit sd ON m.id = sd.medicine_id GROUP BY m.id ORDER BY current_balance DESC;",
            "description": "Summary of total stock credited, debited, and current stock balance per medicine.",
            "type": "SAMPLE_QUERY"
        },
        {
            "query": "SELECT mi.id, p.full_name, m.name, mi.quantity, mi.issue_date, mi.remarks FROM medicine_issues mi JOIN patients p ON mi.patient_id = p.id JOIN medicines m ON mi.medicine_id = m.id WHERE mi.remarks LIKE '%urgent%';",
            "description": "Medicine issues with remarks containing 'urgent'.",
            "type": "SAMPLE_QUERY"
        },
        {
            "query": "SELECT m.category, COUNT(DISTINCT mi.id) AS issue_count FROM medicines m LEFT JOIN medicine_issues mi ON m.id = mi.medicine_id GROUP BY m.category HAVING issue_count > 100;",
            "description": "Medicine categories with more than 100 issued records.",
            "type": "SAMPLE_QUERY"
        },
        {
            "query": "SELECT p.full_name, p.dob, p.gender, SUM(mi.quantity) AS total_medicines_issued FROM patients p LEFT JOIN medicine_issues mi ON p.id = mi.patient_id GROUP BY p.id ORDER BY total_medicines_issued DESC LIMIT 5;",
            "description": "Top 5 patients with the highest total quantity of medicines issued.",
            "type": "SAMPLE_QUERY"
        },
        {
            "query": "SELECT sc.credit_date, m.name, sc.quantity, s.name AS supplier_name FROM stock_credit sc JOIN medicines m ON sc.medicine_id = m.id LEFT JOIN suppliers s ON sc.supplier_id = s.id WHERE sc.credit_date >= CURDATE() - INTERVAL 30 DAY;",
            "description": "Stock credit entries for the past 30 days including medicine and supplier details.",
            "type": "SAMPLE_QUERY"
        },
        {
            "query": "SELECT sd.debit_date, m.name, sd.quantity, p.full_name AS issued_to FROM stock_debit sd JOIN medicines m ON sd.medicine_id = m.id LEFT JOIN patients p ON sd.issued_to_patient_id = p.id WHERE sd.debit_date >= '2024-01-01';",
            "description": "Stock debit records including patient names for debits after January 1, 2024.",
            "type": "SAMPLE_QUERY"
        },
        {
            "query": "SELECT u.role, COUNT(*) AS total_users FROM users u GROUP BY u.role;",
            "description": "Count of users grouped by their roles.",
            "type": "SAMPLE_QUERY"
        },
        {
            "query": "SELECT m.name, m.brand, COUNT(mi.id) AS issues_count FROM medicines m LEFT JOIN medicine_issues mi ON m.id = mi.medicine_id GROUP BY m.id ORDER BY issues_count DESC LIMIT 10;",
            "description": "Top 10 medicines by number of issues.",
            "type": "SAMPLE_QUERY"
        },
        {
            "query": "SELECT p.full_name, p.gender, YEAR(CURDATE()) - YEAR(p.dob) AS age, COUNT(mi.id) AS issues FROM patients p LEFT JOIN medicine_issues mi ON p.id = mi.patient_id GROUP BY p.id HAVING age > 50 ORDER BY issues DESC;",
            "description": "Patients older than 50 with count of their medicine issues.",
            "type": "SAMPLE_QUERY"
        },
        {
            "query": "SELECT s.name, s.contact, COUNT(sc.id) AS total_supplies FROM suppliers s LEFT JOIN stock_credit sc ON s.id = sc.supplier_id GROUP BY s.id ORDER BY total_supplies DESC LIMIT 5;",
            "description": "Top 5 suppliers by number of stock credits recorded.",
            "type": "SAMPLE_QUERY"
        },
        {
            "query": "SELECT m.name, AVG(sc.price_per_unit) AS avg_price FROM medicines m JOIN stock_credit sc ON m.id = sc.medicine_id GROUP BY m.id HAVING AVG(sc.price_per_unit) IS NOT NULL;",
            "description": "Average price per unit of medicines based on stock credit records.",
            "type": "SAMPLE_QUERY"
        },
        {
            "query": "SELECT mi.issue_date, SUM(mi.quantity) AS total_quantity_issued FROM medicine_issues mi GROUP BY mi.issue_date ORDER BY mi.issue_date DESC LIMIT 7;",
            "description": "Total quantity of medicines issued for each of the last 7 days with records.",
            "type": "SAMPLE_QUERY"
        },
        {
            "query": "SELECT m.name, sb.balance FROM stock_balance sb JOIN medicines m ON sb.medicine_id = m.id WHERE sb.balance = 0;",
            "description": "Medicines that are currently out of stock.",
            "type": "SAMPLE_QUERY"
        }
    ]
}